#### Hello to whoever attention this post might call of, of which I will be much obliged :p ####

### Setup (kind of) ###

pug v3.0.2 

node v16.14.2

express v4.17.3

jade-bootstrap v1.0.14

## Motivation: ## 
Following some biography over REST architecture and MEAN stack, I am around a first project whereas gathering modelling skills using the technologies envolved, of which I only new a bit javascript, html and css. 
At this stage is all about a static site though simulating dynamic through embedded test data in a controller.
           
## The scenario: ##

 - One file renders a read-only form, containing data from an object sent by the controller that also contains the data used to build each of the two tables files included.

 - One file renders an editable form, ibidem

 - Speaking of the content it should be exactly the same in both files for instances of the same object

## The problem: ##

 - the read-only file renders all content as expected, i.e., the form and the two included tables

 - the editable file renders an error traced to the mixins file tables.pug used in bulding each of the include files containing a table.

   - although the object passed by the controller exist, at least immediately before the response is sent to pug engine, as proven by console.log, somehow the object that pug engine receives is undefined in the case of the editable file

## Parts of the problem: ##

#### 1. Pug Files structure: ####

        car.pug
          _car_r.pug
            _kms_list.pug
              +yabtable(data.kms_headers, data.kms, "table-striped")              // from pug-bootstrap tables
            _revision_list.pug
              +yabtable(data.revision_headers, data.revisions, "table-striped")   // from pug-bootstrap tables
          _car_u.pug,
            _kms_list.pug
              +yabtable(data.kms_headers, data.kms, "table-striped")              // from pug-bootstrap tables
            _revision_list.pug
              +yabtable(data.revision_headers, data.revisions, "table-striped")   // from pug-bootstrap tables

#### 2. tables.pug (pug-bootstrap table mixins) ####

        mixin yabtable(headers_list, data_obj, type)
	      table.table(class=type)
		    thead
			  tr
			    each title in headers_list
				  th #{title}
            tbody
			  +yabrow(data_obj)

        mixin yabrow(obj)
	      each item in obj
		    tr.table-row
			  each attribute in obj
			    td #{attribute}

#### 3. _car_r.pug ####

        .row
          .col-sm-9.col-sm-offset-3.col-md-10.col-md-offset-2.main
            h2.page-header=title+" - "+sub_title
        .row.placeholders
          .col-sm-12.col-md-4.placeholder
            .text-center
              h3 #{data.car.description}
              img.img-responsive(src=data.car.photo, alt=data.car.discription)
              h4 #{data.car.plate}
                .row.placeholders
                  .col-12 
                .row.placeholders
                  .col-12
                    a.btn.btn-danger(href='/car/d/'+data.car._id, role='button') Delete
          .col-sm-12.col-md-8.placeholder
            +panel-default("Identificação")
              .row
                .col-sm-12.col-md-3.placeholder
                  +input("checkbox", "chk_ev", "ev", "Ev:", "ev", data.car.ev, "disabled")
                .col-sm-12.col-md-3 
                  +input("text", "txt_plate", "plate", "Plate:", "plate", data.car.plate, "disabled")
                .col-sm-12.col-md-6 
                  +input("text", "txt_discription", "discription", "Discription:", "discription", data.car.discription, "disabled")
              (...)
              .row
                .col-sm-6.col-md-6.placeholder
                  .text-center
                    a.btn.btn-success(href='/car', role='button') « Cancel
                .col-sm-6.col-md-6.placeholder
                  .text-center
                    a.btn.btn-danger(href='/car/u/'+data.car._id, role='button') Update »             
        .row.placeholders
            .col-sm-12.col-md-4.placeholder
                .text-center
                    include ./_list_kms

            .col-sm-12.col-md-8.placeholder 
                .text-center
                    include ./_list_revisions
	

#### 4. _car_u.pug ####

        .row
          .col-sm-9.col-sm-offset-3.col-md-10.col-md-offset-2.main
            h2.page-header=title+" - "+sub_title
        .row.placeholders
          .col-sm-12.col-md-4.placeholder
            .text-center
              h3 #{data.car.description}
              img.img-responsive(src=data.car.photo, alt=data.car.discription)
              h4 #{data.car.plate}
                .row.placeholders
                  .col-12 
                .row.placeholders
                  .col-12
                    a.btn.btn-danger(href='/car/d/'+data.car._id, role='button') Delete
          .col-sm-12.col-md-8.placeholder
            +panel-default("Car file")
              .row
                .col-sm-12.col-md-3.placeholder
                  +input("checkbox", "chk_ev", "ev", "Ev:", "ev", data.car.ev, "disabled")
                .col-sm-12.col-md-3 
                  +input("text", "txt_plate", "plate", "Plate:", "plate", data.car.plate, "disabled")
                .col-sm-12.col-md-6 
                  +input("text", "txt_discription", "discription", "Discription:", "discription", data.car.discription, "disabled")
              (...)
              .row
                .col-sm-6.col-md-6.placeholder
                  .text-center
                    a.btn.btn-success(href='/car', role='button') « Cancel
                .col-sm-6.col-md-6.placeholder
                  .text-center
                    a.btn.btn-danger(href='/car/u/'+data.car._id, role='button') Update »             
        .row.placeholders
            .col-sm-12.col-md-4.placeholder
                .text-center
                    include ./_list_kms

            .col-sm-12.col-md-8.placeholder 
                .text-center
                    include ./_list_revisions
#### 5. car.pug ####

        extends ../pugstrap/_bootstrap
        append styles
        title=title 
        block body
        block top
          include ../views/includes/_navbar
        block side
          include ../views/includes/_sidebar
        block content
          if rota==="/car/id"
            include ../views/includes/_car_r
          else if rota==="/car/c"
            include ../views/includes/_car_c
          else if rota==="/car/u/id"
            include ../views/includes/_car_u

#### 6. test data as an array of object contained in test.js plus some midleware functions to manipulate data ####

        const data_obj [
          {
            _id: 1,
            ev: false,
            plate: 'xx01xx', 
            discription:'Model 1', 
            date_entry: "2020-01-11",
            kms_entry: 0,
            kms: [
              {"kms":2000, "date": "2020-02-01"}, 
              {"kms":3000, "date": "2020-03-01"}, 
              {"kms":4000, "date": "2020-04-01"}, 
              {"kms":5000, "date": "2020-05-01"}
           ],
            revisions: [
              {"kms": 2500, "check_in": "2020-02-15", "shop": "yaas", "obs": "n/o", delivery": "2020-02-15"},
              {"kms": 3500, "check_in": "2020-03-15", "shop": "yaas", "obs": "+ something", "delivery": "2020-03-16"} 
            ],
            next_revision: {kms": 4500, "check_in": "2020-04-15", "shop": "yaas", obs": "something observed", delivery": },
            photo: '../images/dashboard_blue.jpg',
            active: true,
          },
          { ... },
          { ... },
        ];

#### 7. car.js ####

        const car_r = (req, res) => {
          const _id = req.params.id;
          const car = ctrl_test.car_by_id(_id);
          // console.log(car);
          const kms_reading = get_last_reading(car);
          const last_revision = get_last_revision(car);
          const next_revision = get_next_revision(car);
          const readings = get_readings(car);
          const revisions = get_revisions(car);

          const head_revisions = (revisions) => {
            let arr = Object.getOwnPropertyNames(revisions[0]);
            // console.log(arr);
            return arr;
          };
          const head_odometro = (readings) => {
            let arr = Object.getOwnPropertyNames(readings[0]);     
            // console.log(arr);
            return arr;
          };

          const data = {
            "car": car, 
            "kms": kms,
            "last_revision": last_revision,               
            "next_revision": next_revision,
            "revisions": revisions,
            "revision_headers": head_revision(revisions),
            "readings": readings,
            "reading_headers": head_readings(readings),
          };

          // console.log({...data});
    
          if (!err){
            res.render('carro', {title: 'Carro', sub_title: 'Ficha', 
              dados: dados, rota: '/Carro/id'});
          }else{
            res
              .status(404)
              .json({"message": "documento não encontrado"});
          }
        };

        
        const car_u = (req, res)=>{
          const _id = req.params.id;
          // console.log('id: ' + _id);
          const car = ctrl_testes.carro_por_id(_id);
          // console.log(car);
          const kms_atuais = get_ultimo_odometro(car);
          const ultima_revisao = get_ultima_revisao(car);
          const proxima_revisao = get_proxima_revisao(car);
          const odometros = get_odometros(car);
          const revisoes = get_revisoes(car);
          const head_odometro = (odometros) => {
            let arr = Object.getOwnPropertyNames(odometros[0]);
            // console.log(arr);
            return arr;
          }
          const head_revisao = (revisoes) => {
            let arr = Object.getOwnPropertyNames(revisoes[0]);
            // console.log(arr);
            return arr;
          }
          const dados = {
            "carro": car, 
            "kms_atuais": kms_atuais,
            "ultima_revisao": ultima_revisao,
            "proxima_revisao": proxima_revisao,
            "revisoes": revisoes,
            "revisao_header": head_revisao(revisoes),
            "odometros": odometros,
            "odometro_headers": head_odometro(odometros)
          };
          // console.log({...dados});
          if (dados){
            console.log({...dados});
            res.render('carro', {title: 'Carro', sub_title: 'atualização', dados: dados, rota: '/Carro/id/U'});
          }else{
            res
              .status(404)
              .json({"message": "documento não encontrado"});
          }    
        };